{"ast":null,"code":"import React$1, { PureComponent } from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { CaretDownMinor, HorizontalDotsMinor } from '@shopify/polaris-icons';\nimport { Icon as Icon$1 } from '../Icon/Icon.js';\nimport { Popover as Popover$1 } from '../Popover/Popover.js';\nimport { getVisibleAndHiddenTabIndices } from './utilities.js';\nimport styles from './Tabs.scss.js';\nimport { List as List$1 } from './components/List/List.js';\nimport { Panel as Panel$1 } from './components/Panel/Panel.js';\nimport { Tab as Tab$1 } from './components/Tab/Tab.js';\nimport { TabMeasurer as TabMeasurer$1 } from './components/TabMeasurer/TabMeasurer.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Icon$1, {\n  source: CaretDownMinor,\n  color: \"subdued\"\n});\n\nvar _ref2 = /*#__PURE__*/React$1.createElement(Icon$1, {\n  source: HorizontalDotsMinor,\n  color: \"subdued\"\n});\n\nclass TabsInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      disclosureWidth: 0,\n      containerWidth: Infinity,\n      tabWidths: [],\n      visibleTabs: [],\n      hiddenTabs: [],\n      showDisclosure: false,\n      tabToFocus: -1\n    };\n\n    this.handleKeyPress = event => {\n      var {\n        tabToFocus,\n        visibleTabs,\n        hiddenTabs,\n        showDisclosure\n      } = this.state;\n      var key = event.key;\n      var tabsArrayInOrder = showDisclosure ? visibleTabs.concat(hiddenTabs) : [...visibleTabs];\n      var newFocus = tabsArrayInOrder.indexOf(tabToFocus);\n\n      if (key === 'ArrowRight') {\n        newFocus += 1;\n\n        if (newFocus === tabsArrayInOrder.length) {\n          newFocus = 0;\n        }\n      }\n\n      if (key === 'ArrowLeft') {\n        if (newFocus === -1 || newFocus === 0) {\n          newFocus = tabsArrayInOrder.length - 1;\n        } else {\n          newFocus -= 1;\n        }\n      }\n\n      this.setState({\n        tabToFocus: tabsArrayInOrder[newFocus]\n      });\n    };\n\n    this.renderTabMarkup = (tab, index) => {\n      var {\n        selected,\n        children\n      } = this.props;\n      var {\n        tabToFocus\n      } = this.state;\n      var tabPanelID = tab.panelID || \"\".concat(tab.id, \"-panel\");\n      return /*#__PURE__*/React$1.createElement(Tab$1, {\n        key: \"\".concat(index, \"-\").concat(tab.id),\n        id: tab.id,\n        siblingTabHasFocus: tabToFocus > -1,\n        focused: index === tabToFocus,\n        selected: index === selected,\n        onClick: this.handleTabClick,\n        panelID: children ? tabPanelID : undefined,\n        accessibilityLabel: tab.accessibilityLabel,\n        url: tab.url\n      }, tab.content);\n    };\n\n    this.handleFocus = event => {\n      var {\n        selected,\n        tabs\n      } = this.props; // If we are explicitly focusing a non-selected tab, this focuses it\n\n      var target = event.target;\n\n      if (target.classList.contains(styles.Tab) || target.classList.contains(styles.Item)) {\n        var tabToFocus = -1;\n        tabs.every((tab, index) => {\n          if (tab.id === target.id) {\n            tabToFocus = index;\n            return false;\n          }\n\n          return true;\n        });\n        this.setState({\n          tabToFocus\n        });\n        return;\n      }\n\n      if (target.classList.contains(styles.DisclosureActivator)) {\n        return;\n      } // If we are coming in from somewhere other than another tab, focus the\n      // selected tab, and the focus (click) is not on the disclosure activator,\n      // focus the selected tab\n\n\n      if (!event.relatedTarget) {\n        this.setState({\n          tabToFocus: selected\n        });\n        return;\n      }\n\n      var relatedTarget = event.relatedTarget;\n\n      if (relatedTarget instanceof HTMLElement && !relatedTarget.classList.contains(styles.Tab) && !relatedTarget.classList.contains(styles.Item) && !relatedTarget.classList.contains(styles.DisclosureActivator)) {\n        this.setState({\n          tabToFocus: selected\n        });\n      }\n    };\n\n    this.handleBlur = event => {\n      // If we blur and the target is not another tab, forget the focus position\n      if (event.relatedTarget == null) {\n        this.setState({\n          tabToFocus: -1\n        });\n        return;\n      }\n\n      var target = event.relatedTarget; // If we are going to anywhere other than another tab, lose the last focused tab\n\n      if (target instanceof HTMLElement && !target.classList.contains(styles.Tab) && !target.classList.contains(styles.Item)) {\n        this.setState({\n          tabToFocus: -1\n        });\n      }\n    };\n\n    this.handleDisclosureActivatorClick = () => {\n      this.setState(({\n        showDisclosure\n      }) => ({\n        showDisclosure: !showDisclosure\n      }));\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        showDisclosure: false\n      });\n    };\n\n    this.handleMeasurement = measurements => {\n      var {\n        tabs,\n        selected\n      } = this.props;\n      var {\n        tabToFocus\n      } = this.state;\n      var {\n        hiddenTabWidths: tabWidths,\n        containerWidth,\n        disclosureWidth\n      } = measurements;\n      var {\n        visibleTabs,\n        hiddenTabs\n      } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);\n      this.setState({\n        tabToFocus: tabToFocus === -1 ? -1 : selected,\n        visibleTabs,\n        hiddenTabs,\n        disclosureWidth,\n        containerWidth,\n        tabWidths\n      });\n    };\n\n    this.handleTabClick = id => {\n      var {\n        tabs,\n        onSelect = noop\n      } = this.props;\n      var tab = tabs.find(aTab => aTab.id === id);\n\n      if (tab == null) {\n        return;\n      }\n\n      var selectedIndex = tabs.indexOf(tab);\n      onSelect(selectedIndex);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    var {\n      disclosureWidth,\n      tabWidths,\n      containerWidth\n    } = prevState;\n    var {\n      visibleTabs,\n      hiddenTabs\n    } = getVisibleAndHiddenTabIndices(nextProps.tabs, nextProps.selected, disclosureWidth, tabWidths, containerWidth);\n    return {\n      visibleTabs,\n      hiddenTabs,\n      selected: nextProps.selected\n    };\n  }\n\n  render() {\n    var {\n      tabs,\n      selected,\n      fitted,\n      children,\n      i18n,\n      disclosureText\n    } = this.props;\n    var {\n      tabToFocus,\n      visibleTabs,\n      hiddenTabs,\n      showDisclosure\n    } = this.state;\n    var disclosureTabs = hiddenTabs.map(tabIndex => tabs[tabIndex]);\n    var panelMarkup = children ? tabs.map((_tab, index) => {\n      return selected === index ? /*#__PURE__*/React$1.createElement(Panel$1, {\n        id: tabs[index].panelID || \"\".concat(tabs[index].id, \"-panel\"),\n        tabID: tabs[index].id,\n        key: tabs[index].id\n      }, children) : /*#__PURE__*/React$1.createElement(Panel$1, {\n        id: tabs[index].panelID || \"\".concat(tabs[index].id, \"-panel\"),\n        tabID: tabs[index].id,\n        key: tabs[index].id,\n        hidden: true\n      });\n    }) : null;\n    var tabsMarkup = visibleTabs.sort((tabA, tabB) => tabA - tabB).map(tabIndex => this.renderTabMarkup(tabs[tabIndex], tabIndex));\n    var disclosureActivatorVisible = visibleTabs.length < tabs.length;\n    var hasCustomDisclosure = Boolean(disclosureText);\n    var classname = classNames(styles.Tabs, fitted && styles.fitted, disclosureActivatorVisible && styles.fillSpace);\n    var disclosureTabClassName = classNames(styles.DisclosureTab, disclosureActivatorVisible && styles['DisclosureTab-visible']);\n    var disclosureButtonClassName = classNames(styles.DisclosureActivator, hasCustomDisclosure && styles.Tab);\n    var disclosureButtonContentWrapperClassName = classNames(styles.Title, hasCustomDisclosure && styles.titleWithIcon);\n    var disclosureButtonContent = hasCustomDisclosure ? /*#__PURE__*/React$1.createElement(React$1.Fragment, null, disclosureText, _ref) : _ref2;\n    var disclosureButton = /*#__PURE__*/React$1.createElement(\"button\", {\n      type: \"button\",\n      className: disclosureButtonClassName,\n      onClick: this.handleDisclosureActivatorClick,\n      \"aria-label\": i18n.translate('Polaris.Tabs.toggleTabsLabel')\n    }, /*#__PURE__*/React$1.createElement(\"span\", {\n      className: disclosureButtonContentWrapperClassName\n    }, disclosureButtonContent));\n    var activator = disclosureText ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.TabContainer\n    }, disclosureButton) : disclosureButton;\n    return /*#__PURE__*/React$1.createElement(\"div\", null, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Wrapper\n    }, /*#__PURE__*/React$1.createElement(TabMeasurer$1, {\n      tabToFocus: tabToFocus,\n      activator: activator,\n      selected: selected,\n      tabs: tabs,\n      siblingTabHasFocus: tabToFocus > -1,\n      handleMeasurement: this.handleMeasurement\n    }), /*#__PURE__*/React$1.createElement(\"ul\", {\n      role: \"tablist\",\n      className: classname,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeyDown: handleKeyDown,\n      onKeyUp: this.handleKeyPress\n    }, tabsMarkup, /*#__PURE__*/React$1.createElement(\"li\", {\n      className: disclosureTabClassName,\n      role: \"presentation\"\n    }, /*#__PURE__*/React$1.createElement(Popover$1, {\n      preferredPosition: \"below\",\n      activator: activator,\n      active: disclosureActivatorVisible && showDisclosure,\n      onClose: this.handleClose,\n      autofocusTarget: \"first-node\"\n    }, /*#__PURE__*/React$1.createElement(List$1, {\n      focusIndex: hiddenTabs.indexOf(tabToFocus),\n      disclosureTabs: disclosureTabs,\n      onClick: this.handleTabClick,\n      onKeyPress: this.handleKeyPress\n    }))))), panelMarkup);\n  }\n\n}\n\nfunction noop() {}\n\nfunction handleKeyDown(event) {\n  var {\n    key\n  } = event;\n\n  if (key === 'ArrowLeft' || key === 'ArrowRight') {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n\nfunction Tabs(props) {\n  var i18n = useI18n();\n  return /*#__PURE__*/React$1.createElement(TabsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { Tabs };","map":{"version":3,"sources":["/home/bss/Downloads/shopify/create-react-app/node_modules/@shopify/polaris/dist/esm/components/Tabs/Tabs.js"],"names":["React$1","PureComponent","useI18n","classNames","CaretDownMinor","HorizontalDotsMinor","Icon","Icon$1","Popover","Popover$1","getVisibleAndHiddenTabIndices","styles","List","List$1","Panel","Panel$1","Tab","Tab$1","TabMeasurer","TabMeasurer$1","_ref","createElement","source","color","_ref2","TabsInner","constructor","args","state","disclosureWidth","containerWidth","Infinity","tabWidths","visibleTabs","hiddenTabs","showDisclosure","tabToFocus","handleKeyPress","event","key","tabsArrayInOrder","concat","newFocus","indexOf","length","setState","renderTabMarkup","tab","index","selected","children","props","tabPanelID","panelID","id","siblingTabHasFocus","focused","onClick","handleTabClick","undefined","accessibilityLabel","url","content","handleFocus","tabs","target","classList","contains","Item","every","DisclosureActivator","relatedTarget","HTMLElement","handleBlur","handleDisclosureActivatorClick","handleClose","handleMeasurement","measurements","hiddenTabWidths","onSelect","noop","find","aTab","selectedIndex","getDerivedStateFromProps","nextProps","prevState","render","fitted","i18n","disclosureText","disclosureTabs","map","tabIndex","panelMarkup","_tab","tabID","hidden","tabsMarkup","sort","tabA","tabB","disclosureActivatorVisible","hasCustomDisclosure","Boolean","classname","Tabs","fillSpace","disclosureTabClassName","DisclosureTab","disclosureButtonClassName","disclosureButtonContentWrapperClassName","Title","titleWithIcon","disclosureButtonContent","Fragment","disclosureButton","type","className","translate","activator","TabContainer","Wrapper","role","onFocus","onBlur","onKeyDown","handleKeyDown","onKeyUp","preferredPosition","active","onClose","autofocusTarget","focusIndex","onKeyPress","preventDefault","stopPropagation","Object","assign"],"mappings":"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","sourcesContent":["import React$1, { PureComponent } from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { CaretDownMinor, HorizontalDotsMinor } from '@shopify/polaris-icons';\nimport { Icon as Icon$1 } from '../Icon/Icon.js';\nimport { Popover as Popover$1 } from '../Popover/Popover.js';\nimport { getVisibleAndHiddenTabIndices } from './utilities.js';\nimport styles from './Tabs.scss.js';\nimport { List as List$1 } from './components/List/List.js';\nimport { Panel as Panel$1 } from './components/Panel/Panel.js';\nimport { Tab as Tab$1 } from './components/Tab/Tab.js';\nimport { TabMeasurer as TabMeasurer$1 } from './components/TabMeasurer/TabMeasurer.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Icon$1, {\n  source: CaretDownMinor,\n  color: \"subdued\"\n});\n\nvar _ref2 = /*#__PURE__*/React$1.createElement(Icon$1, {\n  source: HorizontalDotsMinor,\n  color: \"subdued\"\n});\n\nclass TabsInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      disclosureWidth: 0,\n      containerWidth: Infinity,\n      tabWidths: [],\n      visibleTabs: [],\n      hiddenTabs: [],\n      showDisclosure: false,\n      tabToFocus: -1\n    };\n\n    this.handleKeyPress = event => {\n      const {\n        tabToFocus,\n        visibleTabs,\n        hiddenTabs,\n        showDisclosure\n      } = this.state;\n      const key = event.key;\n      const tabsArrayInOrder = showDisclosure ? visibleTabs.concat(hiddenTabs) : [...visibleTabs];\n      let newFocus = tabsArrayInOrder.indexOf(tabToFocus);\n\n      if (key === 'ArrowRight') {\n        newFocus += 1;\n\n        if (newFocus === tabsArrayInOrder.length) {\n          newFocus = 0;\n        }\n      }\n\n      if (key === 'ArrowLeft') {\n        if (newFocus === -1 || newFocus === 0) {\n          newFocus = tabsArrayInOrder.length - 1;\n        } else {\n          newFocus -= 1;\n        }\n      }\n\n      this.setState({\n        tabToFocus: tabsArrayInOrder[newFocus]\n      });\n    };\n\n    this.renderTabMarkup = (tab, index) => {\n      const {\n        selected,\n        children\n      } = this.props;\n      const {\n        tabToFocus\n      } = this.state;\n      const tabPanelID = tab.panelID || `${tab.id}-panel`;\n      return /*#__PURE__*/React$1.createElement(Tab$1, {\n        key: `${index}-${tab.id}`,\n        id: tab.id,\n        siblingTabHasFocus: tabToFocus > -1,\n        focused: index === tabToFocus,\n        selected: index === selected,\n        onClick: this.handleTabClick,\n        panelID: children ? tabPanelID : undefined,\n        accessibilityLabel: tab.accessibilityLabel,\n        url: tab.url\n      }, tab.content);\n    };\n\n    this.handleFocus = event => {\n      const {\n        selected,\n        tabs\n      } = this.props; // If we are explicitly focusing a non-selected tab, this focuses it\n\n      const target = event.target;\n\n      if (target.classList.contains(styles.Tab) || target.classList.contains(styles.Item)) {\n        let tabToFocus = -1;\n        tabs.every((tab, index) => {\n          if (tab.id === target.id) {\n            tabToFocus = index;\n            return false;\n          }\n\n          return true;\n        });\n        this.setState({\n          tabToFocus\n        });\n        return;\n      }\n\n      if (target.classList.contains(styles.DisclosureActivator)) {\n        return;\n      } // If we are coming in from somewhere other than another tab, focus the\n      // selected tab, and the focus (click) is not on the disclosure activator,\n      // focus the selected tab\n\n\n      if (!event.relatedTarget) {\n        this.setState({\n          tabToFocus: selected\n        });\n        return;\n      }\n\n      const relatedTarget = event.relatedTarget;\n\n      if (relatedTarget instanceof HTMLElement && !relatedTarget.classList.contains(styles.Tab) && !relatedTarget.classList.contains(styles.Item) && !relatedTarget.classList.contains(styles.DisclosureActivator)) {\n        this.setState({\n          tabToFocus: selected\n        });\n      }\n    };\n\n    this.handleBlur = event => {\n      // If we blur and the target is not another tab, forget the focus position\n      if (event.relatedTarget == null) {\n        this.setState({\n          tabToFocus: -1\n        });\n        return;\n      }\n\n      const target = event.relatedTarget; // If we are going to anywhere other than another tab, lose the last focused tab\n\n      if (target instanceof HTMLElement && !target.classList.contains(styles.Tab) && !target.classList.contains(styles.Item)) {\n        this.setState({\n          tabToFocus: -1\n        });\n      }\n    };\n\n    this.handleDisclosureActivatorClick = () => {\n      this.setState(({\n        showDisclosure\n      }) => ({\n        showDisclosure: !showDisclosure\n      }));\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        showDisclosure: false\n      });\n    };\n\n    this.handleMeasurement = measurements => {\n      const {\n        tabs,\n        selected\n      } = this.props;\n      const {\n        tabToFocus\n      } = this.state;\n      const {\n        hiddenTabWidths: tabWidths,\n        containerWidth,\n        disclosureWidth\n      } = measurements;\n      const {\n        visibleTabs,\n        hiddenTabs\n      } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);\n      this.setState({\n        tabToFocus: tabToFocus === -1 ? -1 : selected,\n        visibleTabs,\n        hiddenTabs,\n        disclosureWidth,\n        containerWidth,\n        tabWidths\n      });\n    };\n\n    this.handleTabClick = id => {\n      const {\n        tabs,\n        onSelect = noop\n      } = this.props;\n      const tab = tabs.find(aTab => aTab.id === id);\n\n      if (tab == null) {\n        return;\n      }\n\n      const selectedIndex = tabs.indexOf(tab);\n      onSelect(selectedIndex);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      disclosureWidth,\n      tabWidths,\n      containerWidth\n    } = prevState;\n    const {\n      visibleTabs,\n      hiddenTabs\n    } = getVisibleAndHiddenTabIndices(nextProps.tabs, nextProps.selected, disclosureWidth, tabWidths, containerWidth);\n    return {\n      visibleTabs,\n      hiddenTabs,\n      selected: nextProps.selected\n    };\n  }\n\n  render() {\n    const {\n      tabs,\n      selected,\n      fitted,\n      children,\n      i18n,\n      disclosureText\n    } = this.props;\n    const {\n      tabToFocus,\n      visibleTabs,\n      hiddenTabs,\n      showDisclosure\n    } = this.state;\n    const disclosureTabs = hiddenTabs.map(tabIndex => tabs[tabIndex]);\n    const panelMarkup = children ? tabs.map((_tab, index) => {\n      return selected === index ? /*#__PURE__*/React$1.createElement(Panel$1, {\n        id: tabs[index].panelID || `${tabs[index].id}-panel`,\n        tabID: tabs[index].id,\n        key: tabs[index].id\n      }, children) : /*#__PURE__*/React$1.createElement(Panel$1, {\n        id: tabs[index].panelID || `${tabs[index].id}-panel`,\n        tabID: tabs[index].id,\n        key: tabs[index].id,\n        hidden: true\n      });\n    }) : null;\n    const tabsMarkup = visibleTabs.sort((tabA, tabB) => tabA - tabB).map(tabIndex => this.renderTabMarkup(tabs[tabIndex], tabIndex));\n    const disclosureActivatorVisible = visibleTabs.length < tabs.length;\n    const hasCustomDisclosure = Boolean(disclosureText);\n    const classname = classNames(styles.Tabs, fitted && styles.fitted, disclosureActivatorVisible && styles.fillSpace);\n    const disclosureTabClassName = classNames(styles.DisclosureTab, disclosureActivatorVisible && styles['DisclosureTab-visible']);\n    const disclosureButtonClassName = classNames(styles.DisclosureActivator, hasCustomDisclosure && styles.Tab);\n    const disclosureButtonContentWrapperClassName = classNames(styles.Title, hasCustomDisclosure && styles.titleWithIcon);\n    const disclosureButtonContent = hasCustomDisclosure ? /*#__PURE__*/React$1.createElement(React$1.Fragment, null, disclosureText, _ref) : _ref2;\n    const disclosureButton = /*#__PURE__*/React$1.createElement(\"button\", {\n      type: \"button\",\n      className: disclosureButtonClassName,\n      onClick: this.handleDisclosureActivatorClick,\n      \"aria-label\": i18n.translate('Polaris.Tabs.toggleTabsLabel')\n    }, /*#__PURE__*/React$1.createElement(\"span\", {\n      className: disclosureButtonContentWrapperClassName\n    }, disclosureButtonContent));\n    const activator = disclosureText ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.TabContainer\n    }, disclosureButton) : disclosureButton;\n    return /*#__PURE__*/React$1.createElement(\"div\", null, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Wrapper\n    }, /*#__PURE__*/React$1.createElement(TabMeasurer$1, {\n      tabToFocus: tabToFocus,\n      activator: activator,\n      selected: selected,\n      tabs: tabs,\n      siblingTabHasFocus: tabToFocus > -1,\n      handleMeasurement: this.handleMeasurement\n    }), /*#__PURE__*/React$1.createElement(\"ul\", {\n      role: \"tablist\",\n      className: classname,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeyDown: handleKeyDown,\n      onKeyUp: this.handleKeyPress\n    }, tabsMarkup, /*#__PURE__*/React$1.createElement(\"li\", {\n      className: disclosureTabClassName,\n      role: \"presentation\"\n    }, /*#__PURE__*/React$1.createElement(Popover$1, {\n      preferredPosition: \"below\",\n      activator: activator,\n      active: disclosureActivatorVisible && showDisclosure,\n      onClose: this.handleClose,\n      autofocusTarget: \"first-node\"\n    }, /*#__PURE__*/React$1.createElement(List$1, {\n      focusIndex: hiddenTabs.indexOf(tabToFocus),\n      disclosureTabs: disclosureTabs,\n      onClick: this.handleTabClick,\n      onKeyPress: this.handleKeyPress\n    }))))), panelMarkup);\n  }\n\n}\n\nfunction noop() {}\n\nfunction handleKeyDown(event) {\n  const {\n    key\n  } = event;\n\n  if (key === 'ArrowLeft' || key === 'ArrowRight') {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n\nfunction Tabs(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React$1.createElement(TabsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { Tabs };\n"]},"metadata":{},"sourceType":"module"}