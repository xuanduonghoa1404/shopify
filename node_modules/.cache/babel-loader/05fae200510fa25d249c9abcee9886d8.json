{"ast":null,"code":"import React$1, { PureComponent } from 'react';\nimport { FeaturesContext } from '../../../../utilities/features/context.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { UnstyledLink as UnstyledLink$1 } from '../../../UnstyledLink/UnstyledLink.js';\nimport styles from '../../Tabs.scss.js';\n\nclass Item extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.context = void 0;\n    this.focusedNode = null;\n\n    this.setFocusedNode = node => {\n      this.focusedNode = node;\n    };\n  }\n\n  componentDidMount() {\n    var {\n      focusedNode\n    } = this;\n    var {\n      focused\n    } = this.props;\n\n    if (focusedNode && focusedNode instanceof HTMLElement && focused) {\n      focusedNode.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    var {\n      focusedNode\n    } = this;\n    var {\n      focused\n    } = this.props;\n\n    if (focusedNode && focusedNode instanceof HTMLElement && focused) {\n      focusedNode.focus();\n    }\n  }\n\n  render() {\n    var {\n      id,\n      panelID,\n      children,\n      url,\n      accessibilityLabel,\n      onClick = noop\n    } = this.props;\n    var classname = classNames(styles.Item);\n    var sharedProps = {\n      id,\n      ref: this.setFocusedNode,\n      onClick,\n      className: classname,\n      'aria-controls': panelID,\n      'aria-selected': false,\n      'aria-label': accessibilityLabel\n    };\n    var markup = url ? /*#__PURE__*/React$1.createElement(UnstyledLink$1, Object.assign({}, sharedProps, {\n      url: url\n    }), children) : /*#__PURE__*/React$1.createElement(\"button\", Object.assign({}, sharedProps, {\n      type: \"button\"\n    }), children);\n    return /*#__PURE__*/React$1.createElement(\"li\", null, markup);\n  }\n\n}\n\nItem.contextType = FeaturesContext;\n\nfunction noop() {}\n\nexport { Item };","map":{"version":3,"sources":["/home/bss/Downloads/shopify/create-react-app/node_modules/@shopify/polaris/dist/esm/components/Tabs/components/Item/Item.js"],"names":["React$1","PureComponent","FeaturesContext","classNames","UnstyledLink","UnstyledLink$1","styles","Item","constructor","args","context","focusedNode","setFocusedNode","node","componentDidMount","focused","props","HTMLElement","focus","componentDidUpdate","render","id","panelID","children","url","accessibilityLabel","onClick","noop","classname","sharedProps","ref","className","markup","createElement","Object","assign","type","contextType"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,aAAlB,QAAuC,OAAvC;AACA,SAASC,eAAT,QAAgC,2CAAhC;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,YAAY,IAAIC,cAAzB,QAA+C,uCAA/C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,IAAN,SAAmBN,aAAnB,CAAiC;AAC/BO,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;AACA,SAAKC,OAAL,GAAe,KAAK,CAApB;AACA,SAAKC,WAAL,GAAmB,IAAnB;;AAEA,SAAKC,cAAL,GAAsBC,IAAI,IAAI;AAC5B,WAAKF,WAAL,GAAmBE,IAAnB;AACD,KAFD;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAM;AACJH,MAAAA;AADI,QAEF,IAFJ;AAGA,QAAM;AACJI,MAAAA;AADI,QAEF,KAAKC,KAFT;;AAIA,QAAIL,WAAW,IAAIA,WAAW,YAAYM,WAAtC,IAAqDF,OAAzD,EAAkE;AAChEJ,MAAAA,WAAW,CAACO,KAAZ;AACD;AACF;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,QAAM;AACJR,MAAAA;AADI,QAEF,IAFJ;AAGA,QAAM;AACJI,MAAAA;AADI,QAEF,KAAKC,KAFT;;AAIA,QAAIL,WAAW,IAAIA,WAAW,YAAYM,WAAtC,IAAqDF,OAAzD,EAAkE;AAChEJ,MAAAA,WAAW,CAACO,KAAZ;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAM;AACJC,MAAAA,EADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,GAJI;AAKJC,MAAAA,kBALI;AAMJC,MAAAA,OAAO,GAAGC;AANN,QAOF,KAAKX,KAPT;AAQA,QAAMY,SAAS,GAAGzB,UAAU,CAACG,MAAM,CAACC,IAAR,CAA5B;AACA,QAAMsB,WAAW,GAAG;AAClBR,MAAAA,EADkB;AAElBS,MAAAA,GAAG,EAAE,KAAKlB,cAFQ;AAGlBc,MAAAA,OAHkB;AAIlBK,MAAAA,SAAS,EAAEH,SAJO;AAKlB,uBAAiBN,OALC;AAMlB,uBAAiB,KANC;AAOlB,oBAAcG;AAPI,KAApB;AASA,QAAMO,MAAM,GAAGR,GAAG,GAAG,aAAaxB,OAAO,CAACiC,aAAR,CAAsB5B,cAAtB,EAAsC6B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,WAAlB,EAA+B;AACrGL,MAAAA,GAAG,EAAEA;AADgG,KAA/B,CAAtC,EAE9BD,QAF8B,CAAhB,GAEF,aAAavB,OAAO,CAACiC,aAAR,CAAsB,QAAtB,EAAgCC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,WAAlB,EAA+B;AAC1FO,MAAAA,IAAI,EAAE;AADoF,KAA/B,CAAhC,EAEzBb,QAFyB,CAF7B;AAKA,WAAO,aAAavB,OAAO,CAACiC,aAAR,CAAsB,IAAtB,EAA4B,IAA5B,EAAkCD,MAAlC,CAApB;AACD;;AA9D8B;;AAiEjCzB,IAAI,CAAC8B,WAAL,GAAmBnC,eAAnB;;AAEA,SAASyB,IAAT,GAAgB,CAAE;;AAElB,SAASpB,IAAT","sourcesContent":["import React$1, { PureComponent } from 'react';\nimport { FeaturesContext } from '../../../../utilities/features/context.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { UnstyledLink as UnstyledLink$1 } from '../../../UnstyledLink/UnstyledLink.js';\nimport styles from '../../Tabs.scss.js';\n\nclass Item extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.context = void 0;\n    this.focusedNode = null;\n\n    this.setFocusedNode = node => {\n      this.focusedNode = node;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      focusedNode\n    } = this;\n    const {\n      focused\n    } = this.props;\n\n    if (focusedNode && focusedNode instanceof HTMLElement && focused) {\n      focusedNode.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    const {\n      focusedNode\n    } = this;\n    const {\n      focused\n    } = this.props;\n\n    if (focusedNode && focusedNode instanceof HTMLElement && focused) {\n      focusedNode.focus();\n    }\n  }\n\n  render() {\n    const {\n      id,\n      panelID,\n      children,\n      url,\n      accessibilityLabel,\n      onClick = noop\n    } = this.props;\n    const classname = classNames(styles.Item);\n    const sharedProps = {\n      id,\n      ref: this.setFocusedNode,\n      onClick,\n      className: classname,\n      'aria-controls': panelID,\n      'aria-selected': false,\n      'aria-label': accessibilityLabel\n    };\n    const markup = url ? /*#__PURE__*/React$1.createElement(UnstyledLink$1, Object.assign({}, sharedProps, {\n      url: url\n    }), children) : /*#__PURE__*/React$1.createElement(\"button\", Object.assign({}, sharedProps, {\n      type: \"button\"\n    }), children);\n    return /*#__PURE__*/React$1.createElement(\"li\", null, markup);\n  }\n\n}\nItem.contextType = FeaturesContext;\n\nfunction noop() {}\n\nexport { Item };\n"]},"metadata":{},"sourceType":"module"}