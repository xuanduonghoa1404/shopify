{"ast":null,"code":"import React$1, { useState, useRef, useCallback } from 'react';\nimport { useI18n } from '../../../../../../utilities/i18n/hooks.js';\nimport { Popover as Popover$1 } from '../../../../../Popover/Popover.js';\nimport { Button as Button$1 } from '../../../../../Button/Button.js';\nimport { useToggle as useToggle$1 } from '../../../../../../utilities/use-toggle.js';\nimport { Form as Form$1 } from '../../../../../Form/Form.js';\nimport { FormLayout as FormLayout$1 } from '../../../../../FormLayout/FormLayout.js';\nimport { Select as Select$1 } from '../../../../../Select/Select.js';\nimport { FilterValueSelector as FilterValueSelector$1 } from '../FilterValueSelector/FilterValueSelector.js';\n\nfunction FilterCreator({\n  filters,\n  resourceName,\n  disabled,\n  onAddFilter\n}) {\n  var {\n    value: popoverActive,\n    toggle: togglePopoverActive,\n    setFalse: setPopoverActiveFalse\n  } = useToggle$1(false);\n  var [selectedFilter, setSelectedFilter] = useState();\n  var [selectedFilterKey, setSelectedFilterKey] = useState();\n  var [selectedFilterValue, setSelectedFilterValue] = useState();\n  var i18n = useI18n();\n  var node = useRef(null);\n  var canAddFilter = Boolean(selectedFilter && selectedFilterKey && selectedFilterValue);\n  var handleButtonFocus = useCallback((...args) => {\n    var event = args[0];\n\n    if (!node.current && event) {\n      node.current = event.target;\n    }\n  }, []);\n  var handleFilterKeyChange = useCallback(filterKey => {\n    var foundFilter = filters.find(filter => {\n      var {\n        minKey,\n        maxKey,\n        operatorText\n      } = filter;\n\n      if (minKey || maxKey) {\n        return filter.key === filterKey || minKey === filterKey || maxKey === filterKey;\n      }\n\n      if (operatorText && typeof operatorText !== 'string') {\n        return filter.key === filterKey || operatorText.filter(({\n          key\n        }) => key === filterKey).length === 1;\n      }\n\n      return filter.key === filterKey;\n    });\n\n    if (!foundFilter) {\n      return;\n    }\n\n    setSelectedFilter(foundFilter);\n    setSelectedFilterKey(filterKey);\n    setSelectedFilterValue(undefined);\n  }, [filters]);\n  var handleFilterValueChange = useCallback(value => {\n    setSelectedFilterValue(value);\n  }, []);\n  var handleAddFilter = useCallback(() => {\n    if (!onAddFilter || !canAddFilter || !selectedFilterKey) {\n      return;\n    }\n\n    onAddFilter({\n      key: selectedFilterKey,\n      value: selectedFilterValue || ''\n    });\n    setPopoverActiveFalse();\n    setSelectedFilter(undefined);\n    setSelectedFilterValue(undefined);\n\n    if (node.current != null) {\n      node.current.focus();\n    }\n  }, [canAddFilter, onAddFilter, selectedFilterKey, selectedFilterValue, setPopoverActiveFalse]);\n  var activator = /*#__PURE__*/React$1.createElement(Button$1, {\n    onClick: togglePopoverActive,\n    disclosure: true,\n    disabled: disabled,\n    onFocus: handleButtonFocus\n  }, i18n.translate('Polaris.ResourceList.FilterCreator.filterButtonLabel'));\n  var filterOptions = filters.map(({\n    key,\n    label\n  }) => ({\n    value: key,\n    label\n  }));\n  var filterValueSelectionMarkup = selectedFilter ? /*#__PURE__*/React$1.createElement(FilterValueSelector$1, {\n    filter: selectedFilter,\n    filterKey: selectedFilterKey,\n    value: selectedFilterValue,\n    onFilterKeyChange: handleFilterKeyChange,\n    onChange: handleFilterValueChange\n  }) : null;\n  var addFilterButtonMarkup = selectedFilter ? /*#__PURE__*/React$1.createElement(Button$1, {\n    onClick: handleAddFilter,\n    disabled: !canAddFilter\n  }, i18n.translate('Polaris.ResourceList.FilterCreator.addFilterButtonLabel')) : null;\n  return /*#__PURE__*/React$1.createElement(Popover$1, {\n    active: popoverActive,\n    activator: activator,\n    onClose: togglePopoverActive,\n    sectioned: true,\n    fullHeight: true\n  }, /*#__PURE__*/React$1.createElement(Form$1, {\n    onSubmit: handleAddFilter\n  }, /*#__PURE__*/React$1.createElement(FormLayout$1, null, /*#__PURE__*/React$1.createElement(Select$1, {\n    label: i18n.translate('Polaris.ResourceList.FilterCreator.showAllWhere', {\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    }),\n    placeholder: i18n.translate('Polaris.ResourceList.FilterCreator.selectFilterKeyPlaceholder'),\n    options: filterOptions,\n    onChange: handleFilterKeyChange,\n    value: selectedFilter && selectedFilter.key\n  }), filterValueSelectionMarkup, addFilterButtonMarkup)));\n}\n\nexport { FilterCreator };","map":{"version":3,"sources":["/home/bss/Downloads/shopify/create-react-app/node_modules/@shopify/polaris/dist/esm/components/ResourceList/components/FilterControl/components/FilterCreator/FilterCreator.js"],"names":["React$1","useState","useRef","useCallback","useI18n","Popover","Popover$1","Button","Button$1","useToggle","useToggle$1","Form","Form$1","FormLayout","FormLayout$1","Select","Select$1","FilterValueSelector","FilterValueSelector$1","FilterCreator","filters","resourceName","disabled","onAddFilter","value","popoverActive","toggle","togglePopoverActive","setFalse","setPopoverActiveFalse","selectedFilter","setSelectedFilter","selectedFilterKey","setSelectedFilterKey","selectedFilterValue","setSelectedFilterValue","i18n","node","canAddFilter","Boolean","handleButtonFocus","args","event","current","target","handleFilterKeyChange","filterKey","foundFilter","find","filter","minKey","maxKey","operatorText","key","length","undefined","handleFilterValueChange","handleAddFilter","focus","activator","createElement","onClick","disclosure","onFocus","translate","filterOptions","map","label","filterValueSelectionMarkup","onFilterKeyChange","onChange","addFilterButtonMarkup","active","onClose","sectioned","fullHeight","onSubmit","resourceNamePlural","plural","toLocaleLowerCase","placeholder","options"],"mappings":"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","sourcesContent":["import React$1, { useState, useRef, useCallback } from 'react';\nimport { useI18n } from '../../../../../../utilities/i18n/hooks.js';\nimport { Popover as Popover$1 } from '../../../../../Popover/Popover.js';\nimport { Button as Button$1 } from '../../../../../Button/Button.js';\nimport { useToggle as useToggle$1 } from '../../../../../../utilities/use-toggle.js';\nimport { Form as Form$1 } from '../../../../../Form/Form.js';\nimport { FormLayout as FormLayout$1 } from '../../../../../FormLayout/FormLayout.js';\nimport { Select as Select$1 } from '../../../../../Select/Select.js';\nimport { FilterValueSelector as FilterValueSelector$1 } from '../FilterValueSelector/FilterValueSelector.js';\n\nfunction FilterCreator({\n  filters,\n  resourceName,\n  disabled,\n  onAddFilter\n}) {\n  const {\n    value: popoverActive,\n    toggle: togglePopoverActive,\n    setFalse: setPopoverActiveFalse\n  } = useToggle$1(false);\n  const [selectedFilter, setSelectedFilter] = useState();\n  const [selectedFilterKey, setSelectedFilterKey] = useState();\n  const [selectedFilterValue, setSelectedFilterValue] = useState();\n  const i18n = useI18n();\n  const node = useRef(null);\n  const canAddFilter = Boolean(selectedFilter && selectedFilterKey && selectedFilterValue);\n  const handleButtonFocus = useCallback((...args) => {\n    const event = args[0];\n\n    if (!node.current && event) {\n      node.current = event.target;\n    }\n  }, []);\n  const handleFilterKeyChange = useCallback(filterKey => {\n    const foundFilter = filters.find(filter => {\n      const {\n        minKey,\n        maxKey,\n        operatorText\n      } = filter;\n\n      if (minKey || maxKey) {\n        return filter.key === filterKey || minKey === filterKey || maxKey === filterKey;\n      }\n\n      if (operatorText && typeof operatorText !== 'string') {\n        return filter.key === filterKey || operatorText.filter(({\n          key\n        }) => key === filterKey).length === 1;\n      }\n\n      return filter.key === filterKey;\n    });\n\n    if (!foundFilter) {\n      return;\n    }\n\n    setSelectedFilter(foundFilter);\n    setSelectedFilterKey(filterKey);\n    setSelectedFilterValue(undefined);\n  }, [filters]);\n  const handleFilterValueChange = useCallback(value => {\n    setSelectedFilterValue(value);\n  }, []);\n  const handleAddFilter = useCallback(() => {\n    if (!onAddFilter || !canAddFilter || !selectedFilterKey) {\n      return;\n    }\n\n    onAddFilter({\n      key: selectedFilterKey,\n      value: selectedFilterValue || ''\n    });\n    setPopoverActiveFalse();\n    setSelectedFilter(undefined);\n    setSelectedFilterValue(undefined);\n\n    if (node.current != null) {\n      node.current.focus();\n    }\n  }, [canAddFilter, onAddFilter, selectedFilterKey, selectedFilterValue, setPopoverActiveFalse]);\n  const activator = /*#__PURE__*/React$1.createElement(Button$1, {\n    onClick: togglePopoverActive,\n    disclosure: true,\n    disabled: disabled,\n    onFocus: handleButtonFocus\n  }, i18n.translate('Polaris.ResourceList.FilterCreator.filterButtonLabel'));\n  const filterOptions = filters.map(({\n    key,\n    label\n  }) => ({\n    value: key,\n    label\n  }));\n  const filterValueSelectionMarkup = selectedFilter ? /*#__PURE__*/React$1.createElement(FilterValueSelector$1, {\n    filter: selectedFilter,\n    filterKey: selectedFilterKey,\n    value: selectedFilterValue,\n    onFilterKeyChange: handleFilterKeyChange,\n    onChange: handleFilterValueChange\n  }) : null;\n  const addFilterButtonMarkup = selectedFilter ? /*#__PURE__*/React$1.createElement(Button$1, {\n    onClick: handleAddFilter,\n    disabled: !canAddFilter\n  }, i18n.translate('Polaris.ResourceList.FilterCreator.addFilterButtonLabel')) : null;\n  return /*#__PURE__*/React$1.createElement(Popover$1, {\n    active: popoverActive,\n    activator: activator,\n    onClose: togglePopoverActive,\n    sectioned: true,\n    fullHeight: true\n  }, /*#__PURE__*/React$1.createElement(Form$1, {\n    onSubmit: handleAddFilter\n  }, /*#__PURE__*/React$1.createElement(FormLayout$1, null, /*#__PURE__*/React$1.createElement(Select$1, {\n    label: i18n.translate('Polaris.ResourceList.FilterCreator.showAllWhere', {\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    }),\n    placeholder: i18n.translate('Polaris.ResourceList.FilterCreator.selectFilterKeyPlaceholder'),\n    options: filterOptions,\n    onChange: handleFilterKeyChange,\n    value: selectedFilter && selectedFilter.key\n  }), filterValueSelectionMarkup, addFilterButtonMarkup)));\n}\n\nexport { FilterCreator };\n"]},"metadata":{},"sourceType":"module"}