{"ast":null,"code":"import React$1, { PureComponent } from 'react';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport { isServer } from '../../../../utilities/target.js';\nimport styles from '../../ColorPicker.scss.js';\nvar isDragging = false; // Required to solve a bug causing the underlying page/container to scroll\n// while trying to drag the ColorPicker controls.\n// This must be called as soon as possible to properly prevent the event.\n// `passive: false` must also be set, as it seems webkit has changed the \"default\" behaviour\n// https://bugs.webkit.org/show_bug.cgi?id=182521\n\nif (!isServer) {\n  window.addEventListener('touchmove', event => {\n    if (!isDragging) {\n      return;\n    }\n\n    event.preventDefault();\n  }, {\n    passive: false\n  });\n}\n\nclass Slidable extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dragging: false\n    };\n    this.node = null;\n    this.draggerNode = null;\n\n    this.setDraggerNode = node => {\n      this.draggerNode = node;\n    };\n\n    this.setNode = node => {\n      this.node = node;\n    };\n\n    this.startDrag = event => {\n      if (isMouseDownEvent(event)) {\n        this.handleDraggerMove(event.clientX, event.clientY);\n      }\n\n      isDragging = true;\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleDragEnd = () => {\n      isDragging = false;\n      this.setState({\n        dragging: false\n      });\n    };\n\n    this.handleMove = event => {\n      event.stopImmediatePropagation();\n      event.stopPropagation();\n\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n\n      if (isMouseMoveEvent(event)) {\n        this.handleDraggerMove(event.clientX, event.clientY);\n        return;\n      }\n\n      this.handleDraggerMove(event.touches[0].clientX, event.touches[0].clientY);\n    };\n\n    this.handleDraggerMove = (x, y) => {\n      if (this.node == null) {\n        return;\n      }\n\n      var {\n        onChange\n      } = this.props;\n      var rect = this.node.getBoundingClientRect();\n      var offsetX = x - rect.left;\n      var offsetY = y - rect.top;\n      onChange({\n        x: offsetX,\n        y: offsetY\n      });\n    };\n  }\n\n  componentDidMount() {\n    var {\n      onDraggerHeight\n    } = this.props;\n\n    if (onDraggerHeight == null) {\n      return;\n    }\n\n    var {\n      draggerNode\n    } = this;\n\n    if (draggerNode == null) {\n      return;\n    }\n\n    onDraggerHeight(draggerNode.clientWidth);\n\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        onDraggerHeight(draggerNode.clientWidth);\n      }, 0);\n    }\n  }\n\n  render() {\n    var {\n      dragging\n    } = this.state;\n    var {\n      draggerX = 0,\n      draggerY = 0\n    } = this.props;\n    var draggerPositioning = {\n      transform: \"translate3d(\".concat(draggerX, \"px, \").concat(draggerY, \"px, 0)\")\n    };\n    var moveListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"mousemove\",\n      handler: this.handleMove,\n      passive: false\n    }) : null;\n    var touchMoveListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"touchmove\",\n      handler: this.handleMove,\n      passive: false\n    }) : null;\n    var endDragListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"mouseup\",\n      handler: this.handleDragEnd\n    }) : null;\n    var touchEndListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"touchend\",\n      handler: this.handleDragEnd\n    }) : null;\n    var touchCancelListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"touchcancel\",\n      handler: this.handleDragEnd\n    }) : null;\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setNode,\n      className: styles.Slidable,\n      onMouseDown: this.startDrag,\n      onTouchStart: this.startDrag\n    }, endDragListener, moveListener, touchMoveListener, touchEndListener, touchCancelListener, /*#__PURE__*/React$1.createElement(\"div\", {\n      style: draggerPositioning,\n      className: styles.Dragger,\n      ref: this.setDraggerNode\n    }));\n  }\n\n}\n\nfunction isMouseMoveEvent(event) {\n  return event.type === 'mousemove';\n}\n\nfunction isMouseDownEvent(event) {\n  return event.type === 'mousedown';\n}\n\nexport { Slidable };","map":{"version":3,"sources":["/home/bss/Downloads/shopify/create-react-app/node_modules/@shopify/polaris/dist/esm/components/ColorPicker/components/Slidable/Slidable.js"],"names":["React$1","PureComponent","EventListener","EventListener$1","isServer","styles","isDragging","window","addEventListener","event","preventDefault","passive","Slidable","constructor","args","state","dragging","node","draggerNode","setDraggerNode","setNode","startDrag","isMouseDownEvent","handleDraggerMove","clientX","clientY","setState","handleDragEnd","handleMove","stopImmediatePropagation","stopPropagation","cancelable","isMouseMoveEvent","touches","x","y","onChange","props","rect","getBoundingClientRect","offsetX","left","offsetY","top","componentDidMount","onDraggerHeight","clientWidth","process","env","NODE_ENV","setTimeout","render","draggerX","draggerY","draggerPositioning","transform","moveListener","createElement","handler","touchMoveListener","endDragListener","touchEndListener","touchCancelListener","ref","className","onMouseDown","onTouchStart","style","Dragger","type"],"mappings":"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","sourcesContent":["import React$1, { PureComponent } from 'react';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport { isServer } from '../../../../utilities/target.js';\nimport styles from '../../ColorPicker.scss.js';\n\nlet isDragging = false; // Required to solve a bug causing the underlying page/container to scroll\n// while trying to drag the ColorPicker controls.\n// This must be called as soon as possible to properly prevent the event.\n// `passive: false` must also be set, as it seems webkit has changed the \"default\" behaviour\n// https://bugs.webkit.org/show_bug.cgi?id=182521\n\nif (!isServer) {\n  window.addEventListener('touchmove', event => {\n    if (!isDragging) {\n      return;\n    }\n\n    event.preventDefault();\n  }, {\n    passive: false\n  });\n}\n\nclass Slidable extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dragging: false\n    };\n    this.node = null;\n    this.draggerNode = null;\n\n    this.setDraggerNode = node => {\n      this.draggerNode = node;\n    };\n\n    this.setNode = node => {\n      this.node = node;\n    };\n\n    this.startDrag = event => {\n      if (isMouseDownEvent(event)) {\n        this.handleDraggerMove(event.clientX, event.clientY);\n      }\n\n      isDragging = true;\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleDragEnd = () => {\n      isDragging = false;\n      this.setState({\n        dragging: false\n      });\n    };\n\n    this.handleMove = event => {\n      event.stopImmediatePropagation();\n      event.stopPropagation();\n\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n\n      if (isMouseMoveEvent(event)) {\n        this.handleDraggerMove(event.clientX, event.clientY);\n        return;\n      }\n\n      this.handleDraggerMove(event.touches[0].clientX, event.touches[0].clientY);\n    };\n\n    this.handleDraggerMove = (x, y) => {\n      if (this.node == null) {\n        return;\n      }\n\n      const {\n        onChange\n      } = this.props;\n      const rect = this.node.getBoundingClientRect();\n      const offsetX = x - rect.left;\n      const offsetY = y - rect.top;\n      onChange({\n        x: offsetX,\n        y: offsetY\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      onDraggerHeight\n    } = this.props;\n\n    if (onDraggerHeight == null) {\n      return;\n    }\n\n    const {\n      draggerNode\n    } = this;\n\n    if (draggerNode == null) {\n      return;\n    }\n\n    onDraggerHeight(draggerNode.clientWidth);\n\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        onDraggerHeight(draggerNode.clientWidth);\n      }, 0);\n    }\n  }\n\n  render() {\n    const {\n      dragging\n    } = this.state;\n    const {\n      draggerX = 0,\n      draggerY = 0\n    } = this.props;\n    const draggerPositioning = {\n      transform: `translate3d(${draggerX}px, ${draggerY}px, 0)`\n    };\n    const moveListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"mousemove\",\n      handler: this.handleMove,\n      passive: false\n    }) : null;\n    const touchMoveListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"touchmove\",\n      handler: this.handleMove,\n      passive: false\n    }) : null;\n    const endDragListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"mouseup\",\n      handler: this.handleDragEnd\n    }) : null;\n    const touchEndListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"touchend\",\n      handler: this.handleDragEnd\n    }) : null;\n    const touchCancelListener = dragging ? /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"touchcancel\",\n      handler: this.handleDragEnd\n    }) : null;\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setNode,\n      className: styles.Slidable,\n      onMouseDown: this.startDrag,\n      onTouchStart: this.startDrag\n    }, endDragListener, moveListener, touchMoveListener, touchEndListener, touchCancelListener, /*#__PURE__*/React$1.createElement(\"div\", {\n      style: draggerPositioning,\n      className: styles.Dragger,\n      ref: this.setDraggerNode\n    }));\n  }\n\n}\n\nfunction isMouseMoveEvent(event) {\n  return event.type === 'mousemove';\n}\n\nfunction isMouseDownEvent(event) {\n  return event.type === 'mousedown';\n}\n\nexport { Slidable };\n"]},"metadata":{},"sourceType":"module"}