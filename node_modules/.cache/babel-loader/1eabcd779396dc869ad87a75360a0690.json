{"ast":null,"code":"import React$1, { useRef, useState } from 'react';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { useToggle as useToggle$1 } from '../../utilities/use-toggle.js';\nimport { Choice as Choice$1, helpTextID } from '../Choice/Choice.js';\nimport styles from './RadioButton.scss.js';\n\nfunction RadioButton({\n  ariaDescribedBy: ariaDescribedByProp,\n  label,\n  labelHidden,\n  helpText,\n  checked,\n  disabled,\n  onChange,\n  onFocus,\n  onBlur,\n  id: idProp,\n  name: nameProp,\n  value\n}) {\n  var id = useUniqueId('RadioButton', idProp);\n  var name = nameProp || id;\n  var inputNode = useRef(null);\n  var [keyFocused, setKeyFocused] = useState(false);\n  var {\n    value: mouseOver,\n    setTrue: handleMouseOver,\n    setFalse: handleMouseOut\n  } = useToggle$1(false);\n\n  var handleKeyUp = () => {\n    !keyFocused && setKeyFocused(true);\n  };\n\n  var handleBlur = () => {\n    onBlur && onBlur();\n    setKeyFocused(false);\n  };\n\n  function handleChange({\n    currentTarget\n  }) {\n    onChange && onChange(currentTarget.checked, id);\n  }\n\n  var describedBy = [];\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (ariaDescribedByProp) {\n    describedBy.push(ariaDescribedByProp);\n  }\n\n  var ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;\n  var inputClassName = classNames(styles.Input, keyFocused && styles.keyFocused);\n  var backdropClassName = classNames(styles.Backdrop, mouseOver && styles.hover);\n  return /*#__PURE__*/React$1.createElement(Choice$1, {\n    label: label,\n    labelHidden: labelHidden,\n    disabled: disabled,\n    id: id,\n    helpText: helpText,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut\n  }, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.RadioButton\n  }, /*#__PURE__*/React$1.createElement(\"input\", {\n    id: id,\n    name: name,\n    value: value,\n    type: \"radio\",\n    checked: checked,\n    disabled: disabled,\n    className: inputClassName,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onKeyUp: handleKeyUp,\n    onBlur: handleBlur,\n    \"aria-describedby\": ariaDescribedBy,\n    ref: inputNode\n  }), /*#__PURE__*/React$1.createElement(\"span\", {\n    className: backdropClassName\n  })));\n}\n\nexport { RadioButton };","map":{"version":3,"sources":["/home/bss/Downloads/shopify/create-react-app/node_modules/@shopify/polaris/dist/esm/components/RadioButton/RadioButton.js"],"names":["React$1","useRef","useState","useUniqueId","classNames","useToggle","useToggle$1","Choice","Choice$1","helpTextID","styles","RadioButton","ariaDescribedBy","ariaDescribedByProp","label","labelHidden","helpText","checked","disabled","onChange","onFocus","onBlur","id","idProp","name","nameProp","value","inputNode","keyFocused","setKeyFocused","mouseOver","setTrue","handleMouseOver","setFalse","handleMouseOut","handleKeyUp","handleBlur","handleChange","currentTarget","describedBy","push","length","join","undefined","inputClassName","Input","backdropClassName","Backdrop","hover","createElement","onMouseOver","onMouseOut","className","type","onKeyUp","ref"],"mappings":"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","sourcesContent":["import React$1, { useRef, useState } from 'react';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { useToggle as useToggle$1 } from '../../utilities/use-toggle.js';\nimport { Choice as Choice$1, helpTextID } from '../Choice/Choice.js';\nimport styles from './RadioButton.scss.js';\n\nfunction RadioButton({\n  ariaDescribedBy: ariaDescribedByProp,\n  label,\n  labelHidden,\n  helpText,\n  checked,\n  disabled,\n  onChange,\n  onFocus,\n  onBlur,\n  id: idProp,\n  name: nameProp,\n  value\n}) {\n  const id = useUniqueId('RadioButton', idProp);\n  const name = nameProp || id;\n  const inputNode = useRef(null);\n  const [keyFocused, setKeyFocused] = useState(false);\n  const {\n    value: mouseOver,\n    setTrue: handleMouseOver,\n    setFalse: handleMouseOut\n  } = useToggle$1(false);\n\n  const handleKeyUp = () => {\n    !keyFocused && setKeyFocused(true);\n  };\n\n  const handleBlur = () => {\n    onBlur && onBlur();\n    setKeyFocused(false);\n  };\n\n  function handleChange({\n    currentTarget\n  }) {\n    onChange && onChange(currentTarget.checked, id);\n  }\n\n  const describedBy = [];\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (ariaDescribedByProp) {\n    describedBy.push(ariaDescribedByProp);\n  }\n\n  const ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;\n  const inputClassName = classNames(styles.Input, keyFocused && styles.keyFocused);\n  const backdropClassName = classNames(styles.Backdrop, mouseOver && styles.hover);\n  return /*#__PURE__*/React$1.createElement(Choice$1, {\n    label: label,\n    labelHidden: labelHidden,\n    disabled: disabled,\n    id: id,\n    helpText: helpText,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut\n  }, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.RadioButton\n  }, /*#__PURE__*/React$1.createElement(\"input\", {\n    id: id,\n    name: name,\n    value: value,\n    type: \"radio\",\n    checked: checked,\n    disabled: disabled,\n    className: inputClassName,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onKeyUp: handleKeyUp,\n    onBlur: handleBlur,\n    \"aria-describedby\": ariaDescribedBy,\n    ref: inputNode\n  }), /*#__PURE__*/React$1.createElement(\"span\", {\n    className: backdropClassName\n  })));\n}\n\nexport { RadioButton };\n"]},"metadata":{},"sourceType":"module"}