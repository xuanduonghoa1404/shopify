{"ast":null,"code":"import React$1, { PureComponent } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp as clamp$1 } from '../../utilities/clamp.js';\nimport { hsbToRgb } from '../../utilities/color-transformers.js';\nimport styles from './ColorPicker.scss.js';\nimport { Slidable as Slidable$1 } from './components/Slidable/Slidable.js';\nimport { AlphaPicker as AlphaPicker$1 } from './components/AlphaPicker/AlphaPicker.js';\nimport { HuePicker as HuePicker$1 } from './components/HuePicker/HuePicker.js';\nvar RESIZE_DEBOUNCE_TIME_MS = 200;\n\nclass ColorPicker extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pickerSize: {\n        width: 0,\n        height: 0\n      }\n    };\n    this.colorNode = null;\n    this.handleResize = debounce$1(() => {\n      var {\n        colorNode\n      } = this;\n\n      if (colorNode == null) {\n        return;\n      }\n\n      this.setState({\n        pickerSize: {\n          width: colorNode.clientWidth,\n          height: colorNode.clientHeight\n        }\n      });\n    }, RESIZE_DEBOUNCE_TIME_MS, {\n      leading: true,\n      trailing: true,\n      maxWait: RESIZE_DEBOUNCE_TIME_MS\n    });\n\n    this.setColorNode = node => {\n      this.colorNode = node;\n    };\n\n    this.handleHueChange = hue => {\n      var {\n        color: {\n          brightness,\n          saturation,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n\n    this.handleAlphaChange = alpha => {\n      var {\n        color: {\n          hue,\n          brightness,\n          saturation\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n\n    this.handleDraggerMove = ({\n      x,\n      y\n    }) => {\n      var {\n        pickerSize\n      } = this.state;\n      var {\n        color: {\n          hue,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      var saturation = clamp$1(x / pickerSize.width, 0, 1);\n      var brightness = clamp$1(1 - y / pickerSize.height, 0, 1);\n      onChange({\n        hue,\n        saturation,\n        brightness,\n        alpha\n      });\n    };\n\n    this.handlePickerDrag = event => {\n      // prevents external elements from being selected\n      event.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    var {\n      colorNode\n    } = this;\n\n    if (colorNode == null) {\n      return;\n    }\n\n    this.setState({\n      pickerSize: {\n        width: colorNode.clientWidth,\n        height: colorNode.clientHeight\n      }\n    });\n\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.setState({\n          pickerSize: {\n            width: colorNode.clientWidth,\n            height: colorNode.clientHeight\n          }\n        });\n      }, 0);\n    }\n  }\n\n  render() {\n    var {\n      id,\n      color,\n      allowAlpha,\n      fullWidth\n    } = this.props;\n    var {\n      hue,\n      saturation,\n      brightness,\n      alpha: providedAlpha\n    } = color;\n    var {\n      pickerSize\n    } = this.state;\n    var alpha = providedAlpha != null && allowAlpha ? providedAlpha : 1;\n    var {\n      red,\n      green,\n      blue\n    } = hsbToRgb({\n      hue,\n      saturation: 1,\n      brightness: 1\n    });\n    var colorString = \"rgba(\".concat(red, \", \").concat(green, \", \").concat(blue, \", \").concat(alpha, \")\");\n    var draggerX = clamp$1(saturation * pickerSize.width, 0, pickerSize.width);\n    var draggerY = clamp$1(pickerSize.height - brightness * pickerSize.height, 0, pickerSize.height);\n    var alphaSliderMarkup = allowAlpha ? /*#__PURE__*/React$1.createElement(AlphaPicker$1, {\n      alpha: alpha,\n      color: color,\n      onChange: this.handleAlphaChange\n    }) : null;\n    var className = classNames(styles.ColorPicker, fullWidth && styles.fullWidth);\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: className,\n      id: id,\n      onMouseDown: this.handlePickerDrag\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setColorNode,\n      className: styles.MainColor\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ColorLayer,\n      style: {\n        backgroundColor: colorString\n      }\n    }), /*#__PURE__*/React$1.createElement(Slidable$1, {\n      onChange: this.handleDraggerMove,\n      draggerX: draggerX,\n      draggerY: draggerY\n    })), /*#__PURE__*/React$1.createElement(HuePicker$1, {\n      hue: hue,\n      onChange: this.handleHueChange\n    }), alphaSliderMarkup, /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"resize\",\n      handler: this.handleResize\n    }));\n  }\n\n}\n\nexport { ColorPicker };","map":{"version":3,"sources":["/home/bss/Downloads/shopify/create-react-app/node_modules/@shopify/polaris/dist/esm/components/ColorPicker/ColorPicker.js"],"names":["React$1","PureComponent","debounce$1","EventListener","EventListener$1","classNames","clamp","clamp$1","hsbToRgb","styles","Slidable","Slidable$1","AlphaPicker","AlphaPicker$1","HuePicker","HuePicker$1","RESIZE_DEBOUNCE_TIME_MS","ColorPicker","constructor","args","state","pickerSize","width","height","colorNode","handleResize","setState","clientWidth","clientHeight","leading","trailing","maxWait","setColorNode","node","handleHueChange","hue","color","brightness","saturation","alpha","onChange","props","handleAlphaChange","handleDraggerMove","x","y","handlePickerDrag","event","preventDefault","componentDidMount","process","env","NODE_ENV","setTimeout","render","id","allowAlpha","fullWidth","providedAlpha","red","green","blue","colorString","draggerX","draggerY","alphaSliderMarkup","createElement","className","onMouseDown","ref","MainColor","ColorLayer","style","backgroundColor","handler"],"mappings":"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","sourcesContent":["import React$1, { PureComponent } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp as clamp$1 } from '../../utilities/clamp.js';\nimport { hsbToRgb } from '../../utilities/color-transformers.js';\nimport styles from './ColorPicker.scss.js';\nimport { Slidable as Slidable$1 } from './components/Slidable/Slidable.js';\nimport { AlphaPicker as AlphaPicker$1 } from './components/AlphaPicker/AlphaPicker.js';\nimport { HuePicker as HuePicker$1 } from './components/HuePicker/HuePicker.js';\n\nconst RESIZE_DEBOUNCE_TIME_MS = 200;\nclass ColorPicker extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pickerSize: {\n        width: 0,\n        height: 0\n      }\n    };\n    this.colorNode = null;\n    this.handleResize = debounce$1(() => {\n      const {\n        colorNode\n      } = this;\n\n      if (colorNode == null) {\n        return;\n      }\n\n      this.setState({\n        pickerSize: {\n          width: colorNode.clientWidth,\n          height: colorNode.clientHeight\n        }\n      });\n    }, RESIZE_DEBOUNCE_TIME_MS, {\n      leading: true,\n      trailing: true,\n      maxWait: RESIZE_DEBOUNCE_TIME_MS\n    });\n\n    this.setColorNode = node => {\n      this.colorNode = node;\n    };\n\n    this.handleHueChange = hue => {\n      const {\n        color: {\n          brightness,\n          saturation,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n\n    this.handleAlphaChange = alpha => {\n      const {\n        color: {\n          hue,\n          brightness,\n          saturation\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n\n    this.handleDraggerMove = ({\n      x,\n      y\n    }) => {\n      const {\n        pickerSize\n      } = this.state;\n      const {\n        color: {\n          hue,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      const saturation = clamp$1(x / pickerSize.width, 0, 1);\n      const brightness = clamp$1(1 - y / pickerSize.height, 0, 1);\n      onChange({\n        hue,\n        saturation,\n        brightness,\n        alpha\n      });\n    };\n\n    this.handlePickerDrag = event => {\n      // prevents external elements from being selected\n      event.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      colorNode\n    } = this;\n\n    if (colorNode == null) {\n      return;\n    }\n\n    this.setState({\n      pickerSize: {\n        width: colorNode.clientWidth,\n        height: colorNode.clientHeight\n      }\n    });\n\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.setState({\n          pickerSize: {\n            width: colorNode.clientWidth,\n            height: colorNode.clientHeight\n          }\n        });\n      }, 0);\n    }\n  }\n\n  render() {\n    const {\n      id,\n      color,\n      allowAlpha,\n      fullWidth\n    } = this.props;\n    const {\n      hue,\n      saturation,\n      brightness,\n      alpha: providedAlpha\n    } = color;\n    const {\n      pickerSize\n    } = this.state;\n    const alpha = providedAlpha != null && allowAlpha ? providedAlpha : 1;\n    const {\n      red,\n      green,\n      blue\n    } = hsbToRgb({\n      hue,\n      saturation: 1,\n      brightness: 1\n    });\n    const colorString = `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n    const draggerX = clamp$1(saturation * pickerSize.width, 0, pickerSize.width);\n    const draggerY = clamp$1(pickerSize.height - brightness * pickerSize.height, 0, pickerSize.height);\n    const alphaSliderMarkup = allowAlpha ? /*#__PURE__*/React$1.createElement(AlphaPicker$1, {\n      alpha: alpha,\n      color: color,\n      onChange: this.handleAlphaChange\n    }) : null;\n    const className = classNames(styles.ColorPicker, fullWidth && styles.fullWidth);\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: className,\n      id: id,\n      onMouseDown: this.handlePickerDrag\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setColorNode,\n      className: styles.MainColor\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ColorLayer,\n      style: {\n        backgroundColor: colorString\n      }\n    }), /*#__PURE__*/React$1.createElement(Slidable$1, {\n      onChange: this.handleDraggerMove,\n      draggerX: draggerX,\n      draggerY: draggerY\n    })), /*#__PURE__*/React$1.createElement(HuePicker$1, {\n      hue: hue,\n      onChange: this.handleHueChange\n    }), alphaSliderMarkup, /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"resize\",\n      handler: this.handleResize\n    }));\n  }\n\n}\n\nexport { ColorPicker };\n"]},"metadata":{},"sourceType":"module"}